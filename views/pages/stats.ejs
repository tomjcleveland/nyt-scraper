<%- include('../partials/header') %>
  <h2>NYT Statistics</h2>
  <p>High level stats for <strong><%= stats.articleCount.toLocaleString() %> articles</strong> captured from the New York Times since <strong><%= dayjs(stats.firstCapture).format('MMMM D, YYYY') %></strong>.</p>
  
  <!-- Eh this is boring -->
  <!-- <h3 id="overview">Overview</h3>
  <p>The articles in our database.</p>
    <div class="row">
    <div class="col-md-6">
      <div class="aspect aspect-3-2 shadow-sm">
        <div class="aspect-contents" id="piechart"></div>
      </div>
    </div>
  </div> -->

  <h3 id="headlines-per-article" class="mt-4">Headlines per article</h3>
  <p>The distribution of headlines per article. (Only includes articles that have appeared on the front page.)</p>
  <div class="aspect aspect-16-9 shadow-sm">
    <div class="aspect-contents" id="headline-histogram"></div>
  </div>

  <h3 id="ranked-articles" class="mt-4">Ranked articles</h3>
  <p>The percentage of articles that end up on the most-viewed, most-shared, or most-emailed lists, by number of headlines. (Truncated at four headlines to exclude sparse data.)</p>
  <div class="aspect aspect-16-9 shadow-sm">
    <div class="aspect-contents" id="ranked"></div>
  </div>

  <h3 id="days-front-page" class="mt-4">Hours on front page</h3>
  <p>Visualizing how long articles spend on front page. (Only includes articles that have appeared on the front page. Truncated at 48 hours for readability.)</p>
  <div class="aspect aspect-16-9 shadow-sm">
    <div class="aspect-contents" id="days-histogram"></div>
  </div>

  <!-- Also boring -->
  <!-- <h3 id="headlines-views" class="mt-4">Headlines vs. views</h3>
  <p>Plotting the number of headlines for an article against its best ranking on the "most viewed" list.</p>
  <div class="aspect aspect-16-9 shadow-sm">
    <div class="aspect-contents" id="scatter"></div>
  </div> -->

  <div class="row">
    <div class="col-md-6">
      <h3 id="front-page-by-section" class="mt-4">Front page time, by section</h3>
      <p>The front page time allotted to each section.</p>
      <div class="aspect aspect-3-2 shadow-sm">
        <div class="aspect-contents" id="front-page-by-section-chart"></div>
      </div>
    </div>
    <div class="col-md-6">
      <h3 id="front-page-by-tag" class="mt-4">Front page time, by tag</h3>
      <p>The front page time allotted to each tag (only top 20 tags shown).</p>
      <div class="aspect aspect-3-2 shadow-sm">
        <div class="aspect-contents" id="front-page-by-tag-chart"></div>
      </div>
    </div>
    <div class="col-md-6">
      <h3 id="front-page-by-tone" class="mt-4">Front page time, by tone</h3>
      <p>The front page time allotted to each tone.</p>
      <div class="aspect aspect-3-2 shadow-sm">
        <div class="aspect-contents" id="front-page-by-tone-chart"></div>
      </div>
    </div>

    <!-- <div class="col-md-6">
      <h3 id="front-page-by-category" class="mt-4">Front page time, by category</h3>
      <p>The front page time allotted to each category.</p>
      <div class="aspect aspect-3-2 shadow-sm">
        <div class="aspect-contents" id="front-page-by-category-chart"></div>
      </div>
      <div class="p-2 mt-2">
        <p>
          <strong>News:</strong>
          <%= stats.newsCategories.news.join(', ') %>
        </p>
        <p>
          <strong>Fluff:</strong>
          <%= stats.newsCategories.fluff.join(', ') %>
        </p>
      </div>
    </div> -->
  </div>

  <div class="row">
    <div class="col-md-6">
      <h3 id="views-by-tone" class="mt-4">Views by tone</h3>
      <div id="views-by-tone-chart"></div>
    </div>
    <div class="col-md-6">
      <h3 id="views-by-section" class="mt-4">Views by section</h3>
      <div id="views-by-section-chart"></div>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <h3 id="views-periods-scatter" class="mt-4">Front page time vs. views, by section</h3>
      <div class="aspect aspect-3-2 shadow-sm">
        <div class="aspect-contents" id="views-periods-scatter-chart"></div>
      </div>
    </div>
  </div>

  <script>
    const {
      pieChart,
      headlineHistogram,
      daysHistogram,
      scatter,
      abEffects,
      frontPageBySection,
      frontPageByCategory,
      frontPageByTag,
      frontPageByTone,
      viewsByTone,
      viewsBySection,
      viewsPeriodsScatter,
    } = JSON.parse('<%- JSON.stringify(stats) %>');
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
      // Boringâ€”removing for now
      // const dataPieChart = new google.visualization.arrayToDataTable(pieChart);
      // const chartPieChart = new google.visualization.PieChart(document.getElementById('piechart'));
      // const optionsPieChart = {
      //   chartArea: {
      //     height: '80%',
      //     width: '100%'
      //   }
      // };
      // chartPieChart.draw(dataPieChart, optionsPieChart);
      
      const dataHeadlineHist = new google.visualization.arrayToDataTable(headlineHistogram);
      const chartHeadlineHist = new google.visualization.ColumnChart(document.getElementById('headline-histogram'));
      const optionsHeadlineHist = {
        legend: { position: "none" },
        colors: window.COLORS.FULL,
        vAxis: {
          title: '% of articles',
          format: "#'%'"
        },
        hAxis: {
          title: '# of headlines',
        },
        chartArea: {
          height: '70%',
        }
      };
      chartHeadlineHist.draw(dataHeadlineHist, optionsHeadlineHist);

      const dataDaysHist = new google.visualization.arrayToDataTable(daysHistogram);
      const chartDaysHist = new google.visualization.ColumnChart(document.getElementById('days-histogram'));
      const optionsDaysHist = {
        legend: { position: "none" },
        colors: window.COLORS.FULL,
        vAxis: {
          title: '% of articles',
          format: "#'%'"
        },
        hAxis: {
          title: 'Hours on front page',
          ticks: daysHistogram.slice(1).map(d => d[0])
        },
        chartArea: {
          height: '70%'
        }
      };
      chartDaysHist.draw(dataDaysHist, optionsDaysHist);

      // Boring.
      // const dataScatter = new google.visualization.arrayToDataTable(scatter);
      // const chartScatter = new google.visualization.ScatterChart(document.getElementById('scatter'));
      // let ticks = [];
      // for (let i = 1; i <= 20; i++) {
      //   ticks.push({v: -1 * i, f: i.toString()});
      // }
      // const optionsScatter = {
      //   legend: { position: "none" },
      //   colors: window.COLORS.FULL,
      //   vAxis: {
      //     title: 'Highest view rank',
      //     ticks,
      //   },
      //   hAxis: {
      //     title: '# of headlines',
      //   },
      //   chartArea: {
      //     height: '70%'
      //   },
      //   dataOpacity: 0.25,
      // };
      // chartScatter.draw(dataScatter, optionsScatter);

      const dataAbEffects = new google.visualization.arrayToDataTable(abEffects);
      const chartAbEffects = new google.visualization.ColumnChart(document.getElementById('ranked'));
      const optionsAbEffects = {
        legend: { position: "none" },
        colors: window.COLORS.FULL,
        vAxis: {
          title: '% of articles that rank',
          format: "#'%'",
          minValue: 0,
        },
        hAxis: {
          title: '# of headlines'
        },
        chartArea: {
          height: '70%'
        }
      };
      chartAbEffects.draw(dataAbEffects, optionsAbEffects);

      const dataFrontPageBySection = new google.visualization.arrayToDataTable(frontPageBySection);
      const chartFrontPageBySection = new google.visualization.PieChart(document.getElementById('front-page-by-section-chart'));
      const optionsFrontPageBySection = {
        chartArea: {
          height: '80%',
          width: '100%'
        }
      };
      chartFrontPageBySection.draw(dataFrontPageBySection, optionsFrontPageBySection);

      // Superseded by frontPageByTone
      // const dataFrontPageByCategory = new google.visualization.arrayToDataTable(frontPageByCategory);
      // const chartFrontPageByCategory = new google.visualization.PieChart(document.getElementById('front-page-by-category-chart'));
      // const optionsFrontPageByCategory = {
      //   chartArea: {
      //     height: '80%',
      //     width: '100%'
      //   }
      // };
      // chartFrontPageByCategory.draw(dataFrontPageByCategory, optionsFrontPageByCategory);

      const dataFrontPageByTag = new google.visualization.arrayToDataTable(frontPageByTag);
      const chartFrontPageByTag = new google.visualization.PieChart(document.getElementById('front-page-by-tag-chart'));
      const optionsFrontPageByTag = {
        chartArea: {
          height: '80%',
          width: '100%'
        }
      };
      chartFrontPageByTag.draw(dataFrontPageByTag, optionsFrontPageByTag);

      const dataFrontPageByTone = new google.visualization.arrayToDataTable(frontPageByTone);
      const chartFrontPageByTone = new google.visualization.PieChart(document.getElementById('front-page-by-tone-chart'));
      const optionsFrontPageByTone = {
        chartArea: {
          height: '80%',
          width: '100%'
        }
      };
      chartFrontPageByTone.draw(dataFrontPageByTone, optionsFrontPageByTone);

      const dataViewsByTone = new google.visualization.arrayToDataTable(viewsByTone);
      const chartViewsByTone = new google.visualization.ColumnChart(document.getElementById('views-by-tone-chart'));
      const optionsViewsByTone = {
        legend: { position: "none" },
        colors: window.COLORS.FULL,
        vAxis: {
          title: 'Avg. # of views',
        },
        hAxis: {
          title: 'Tone',
        },
        chartArea: {
          height: '70%',
        }
      };
      chartViewsByTone.draw(dataViewsByTone, optionsViewsByTone);

      const dataViewsBySection = new google.visualization.arrayToDataTable(viewsBySection);
      const chartViewsBySection = new google.visualization.ColumnChart(document.getElementById('views-by-section-chart'));
      const optionsViewsBySection = {
        legend: { position: "none" },
        colors: window.COLORS.FULL,
        vAxis: {
          title: 'Avg. # of views',
        },
        hAxis: {
          title: 'Section',
        },
        chartArea: {
          height: '70%',
        }
      };
      chartViewsBySection.draw(dataViewsBySection, optionsViewsBySection);

      const dataViewsPeriodsScatter = new google.visualization.arrayToDataTable(viewsPeriodsScatter);
      const chartViewsPeriodsScatter = new google.visualization.ScatterChart(document.getElementById('views-periods-scatter-chart'));
      const optionsViewsPeriodsScatter = {
        colors: window.COLORS.FULL,
        vAxis: {
          title: 'Total views',
        },
        hAxis: {
          title: 'Total front page time',
        },
        chartArea: {
          height: '70%'
        },
        trendlines: {
          0: {
            visibleInLegend: true,
            showR2: true,
            // type: 'polynomial',
            // degree: 2,
          },
        },
      };
      chartViewsPeriodsScatter.draw(dataViewsPeriodsScatter, optionsViewsPeriodsScatter);
    }
  </script>
<%- include('../partials/footer') %>
